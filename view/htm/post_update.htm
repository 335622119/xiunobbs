<?php include "./view/htm/header.inc.htm"; ?>

<div class="row">
	<div class="col-lg-10 col-lg-offset-1">
		<div class="card">
			<div class="card-block">
				<h4 class="card-title"><?php echo lang('post_update');?></h4>
				<form action="<?php echo url("post-update-$pid");?>" method="post" id="form">
					<input type="hidden" name="doctype" value="<?php echo $post['doctype'];?>" />
					<?php if($isfirst) { ?>
					<fieldset class="form-group">
						<input type="text" class="form-control" placeholder="<?php echo lang('subject');?>" name="subject" value="<?php echo $thread['subject'];?>" id="subject">
					</fieldset>
					<?php } ?>
					<fieldset class="form-group">
						<textarea class="form-control" placeholder="<?php echo lang('message');?>" name="message" id="message" style="height: 300px;"><?php echo $post['message'];?></textarea>
					</fieldset>
					<?php if($isfirst) { ?>
					<fieldset class="form-group">
						<select class="c-select" name="fid">
							<?php foreach ($forumlist_show as $forum) { ?>
							<option value="<?php echo $forum['fid']; ?>"><?php echo $forum['name']; ?></option>
							<?php } ?>
						</select>
					</fieldset>
					<?php } ?>
					<button type="submit" class="btn btn-primary" id="submit" data-loading-text="<?php echo lang('submiting');?>..."> <?php echo lang('post_update');?> </button>
				</form>
			</div>
		</div>
	</div>
</div>

<?php include "./view/htm/footer.inc.htm"; ?>

<script>
var tid = <?php echo $tid;?>;
var jform = $('#form');
var jsubmit = $('#submit');
jform.on('submit', function() {
	var postdata = jform.serialize();
	jsubmit.button('loading');
	$.xpost(jform.attr('action'), postdata, function(code, message) {
		if(code == 0) {
			$.alert(message);
			jsubmit.button(message).delay(3000).location(xn.url('thread-'+tid));
		} else if(code < 0) {
			alert(message);
			jsubmit.button('reset');
		} else {
			jform.find('[name="'+code+'"]').alert(message).focus();
			jsubmit.button('reset');
		}
	});
	return false;
});

// checked
jform.find('[name="fid"]').checked(<?php echo $fid;?>);

$('#nav_pc li[fid="<?php echo $fid;?>"]').tab('show');
$('#nav_mobile li[fid="<?php echo $fid;?>"]').tab('show');

</script>



<!--- 百度编辑器 -->

 <!-- 加载编辑器的容器 -->

<!-- 配置文件 -->
<script type="text/javascript" src="plugin/xn_ueditor/ueditor/ueditor.config.js"></script>
<!-- 编辑器源码文件 -->
<script type="text/javascript" src="plugin/xn_ueditor/ueditor/ueditor.all.js"></script>

<!-- 实例化编辑器 -->
<script type="text/javascript">

UE.registerUI('button',function(editor,uiName){
    //注册按钮执行时的command命令，使用命令默认就会带有回退操作
    editor.registerCommand(uiName,{
        execCommand:function(){
        	editor.execCommand('inserthtml', '<img src="view/img/logo.png" />');
        }
    });

    //创建一个button
    var btn = new UE.ui.Button({
        //按钮的名字
        name:uiName,
        //提示
        title:uiName,
        //需要添加的额外样式，指定icon图标，这里默认使用一个重复的icon
        cssRules :'background-position: -500px 0;',
        //点击时执行的命令
        onclick:function () {
            //这里可以不用执行命令,做你自己的操作也可
           editor.execCommand(uiName);
        }
    });

    //当点到编辑内容上时，按钮要做的状态反射
    editor.addListener('selectionchange', function () {
        var state = editor.queryCommandState(uiName);
        if (state == -1) {
            btn.setDisabled(true);
            btn.setChecked(false);
        } else {
            btn.setDisabled(false);
            btn.setChecked(state);
        }
    });

    //因为你是添加button,所以需要返回这个button
    return btn;
}/*index 指定添加到工具栏上的那个位置，默认时追加到最后,editorId 指定这个UI是那个编辑器实例上的，默认是页面上所有的编辑器都会添加这个按钮*/);



UE.registerUI('combox',function(editor,uiName){
    //注册按钮执行时的command命令,用uiName作为command名字，使用命令默认就会带有回退操作
    editor.registerCommand(uiName,{
        execCommand:function(cmdName,value){
            //这里借用fontsize的命令
            this.execCommand('fontsize',value + 'px')
        },
        queryCommandValue:function(){
            //这里借用fontsize的查询命令
            return this.queryCommandValue('fontsize')
        }
    });


    //创建下拉菜单中的键值对，这里我用字体大小作为例子
    var items = [];
    for(var i= 0,ci;ci=[10, 11, 12, 14, 16, 18, 20, 24, 36][i++];){
        items.push({
            //显示的条目
            label:'字体:' + ci + 'px',
            //选中条目后的返回值
            value:ci,
            //针对每个条目进行特殊的渲染
            renderLabelHtml:function () {
                //这个是希望每个条目的字体是不同的
                return '<div class="edui-label %%-label" style="line-height:2;font-size:' +
                    this.value + 'px;">' + (this.label || '') + '</div>';
            }
        });
    }
    //创建下来框
    var combox = new UE.ui.Combox({
        //需要指定当前的编辑器实例
        editor:editor,
        //添加条目
        items:items,
        //当选中时要做的事情
        onselect:function (t, index) {
            //拿到选中条目的值
            editor.execCommand(uiName, this.items[index].value);
        },
        //提示
        title:uiName,
        //当编辑器没有焦点时，combox默认显示的内容
        initValue:uiName
    });

    editor.addListener('selectionchange', function (type, causeByUi, uiReady) {
        if (!uiReady) {
            var state = editor.queryCommandState(uiName);
            if (state == -1) {
                combox.setDisabled(true);
            } else {
                combox.setDisabled(false);
                var value = editor.queryCommandValue(uiName);
                if(!value){
                    combox.setValue(uiName);
                    return;
                }
                //ie下从源码模式切换回来时，字体会带单引号，而且会有逗号
                value && (value = value.replace(/['"]/g, '').split(',')[0]);
                combox.setValue(value);

            }
        }

    });
    return combox;
}, 2);
/*index 指定添加到工具栏上的那个位置，默认时追加到最后,editorId 指定这个UI是那个编辑器实例上的，默认是页面上所有的编辑器都会添加这个按钮*/

var ue = UE.getEditor('message');
$('#message').css('padding', 0).css('border', 0);
jform.find('input[name="doctype"]').val(0);



</script>

